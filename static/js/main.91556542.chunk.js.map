{"version":3,"sources":["logo.svg","component/Fullpage.js","section/TitleAndIcon.js","section/AboutSection.js","component/Skillcard.js","section/SkillSection.js","component/Bar.js","component/MainPage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Fullpage","children","this","props","className","style","Component","TitleAndIcon","data","title","subtitle","Object","keys","links","map","key","url","AboutSection","section","items","contents","Skillcard","skill","src","image","SkillSection","marginTop","es","Bar","color","MainPage","colorRand","col","Math","floor","random","setState","console","log","state","backgroundColorRand","backgroundColor","textShadow","cursor","boxShadow","onClick","App","scrollToTopWithCallback","bind","scrollToComponent","Blue","offset","align","duration","ease","Tsection","on","flakesMaxActive","type","Asection","Ssection","ref","fontSize","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.91556542.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, {Component} from 'react';\r\nimport \"./Fullpage.css\"\r\n\r\nclass Fullpage extends Component{\r\n    render(){\r\n        const{children} = this.props\r\n        return(\r\n            <div className={`fullPage ${this.props.className || '' }`  } \r\n            style={ this.props.style } >\r\n                {children}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Fullpage;"," import React, {Component} from 'react';\r\n import Fullpage from '../component/Fullpage';\r\n import data from \"../data.json\"\r\n import { SocialIcon } from 'react-social-icons';\r\n \r\nclass TitleAndIcon extends Component{\r\n    render(){\r\n                const{children} = this.props\r\n\r\n        return(\r\n            <Fullpage className=\"column \"   >\r\n                \r\n                <h1 className=\"title\"   >\r\n                        {data.title}\r\n                    </h1>\r\n                    <h1 className=\"title\"     >\r\n                        {data.subtitle}\r\n                    </h1>\r\n                    <div>\r\n                       {Object.keys(data.links).map(\r\n                        key=>{\r\n                            return(\r\n                                <span className=\"professionIcon\"  > \r\n                                    <SocialIcon url={data.links[key]} />\r\n                                </span>\r\n                            )\r\n                        }\r\n                    )}\r\n                </div>      \r\n                {children}     \r\n            </Fullpage>   \r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default TitleAndIcon;"," import React, {Component} from 'react';\r\n import Fullpage from '../component/Fullpage';\r\n import data from \"../data.json\"\r\n \r\nclass AboutSection extends Component{\r\n    render(){\r\n        const{children} = this.props\r\n\r\n        return(\r\n            <Fullpage className=\"column\"   >\r\n                        \r\n                <h1 className=\"title\">\r\n                        {data.section[0].title}\r\n                    </h1>\r\n                    <p className=\"profession\">\r\n                        <h4>{data.section[0].items[0].contents[0]}</h4>\r\n                        <h3>{data.section[0].items[0].contents[1]}</h3>\r\n                        <h2>{data.section[0].items[0].contents[2]}</h2>\r\n                        <h2>{data.section[0].items[0].contents[3]}</h2>\r\n                        \r\n                    </p>     \r\n                    {children}           \r\n            </Fullpage>   \r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default AboutSection ;","import React, {Component} from 'react';\r\nimport \"./Skillcard.css\"\r\n\r\nclass Skillcard extends Component{\r\n    render(){\r\n        const{skill} = this.props\r\n        return(\r\n            <div className=\"card\" >\r\n              <div className=\"card-top\" > \r\n                   <img className=\"card-img\" src={skill.contents.image} />\r\n              </div>\r\n              \r\n              <div className=\"card-bottom\" >\r\n                <h3>{skill.contents.title} </h3>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Skillcard;"," import React, {Component} from 'react';\r\n import Fullpage from '../component/Fullpage';\r\n import Skillcard from '../component/Skillcard';\r\n import data from \"../data.json\"\r\n import { SocialIcon } from 'react-social-icons';\r\n\r\nclass SkillSection extends Component{\r\n    render(){\r\n        const{children} = this.props\r\n\r\n        return(\r\n            <Fullpage className=\"column\"   >\r\n               \r\n                <h3 style={{marginTop:\"100px\"}} >{data.section[1].title}</h3>\r\n                <div className=\"row\">\r\n                    {data.section[1].items.map(es=>{\r\n                        return (<Skillcard skill={es} />) ;\r\n\r\n                    })}\r\n                </div>      \r\n                {children}           \r\n            </Fullpage>   \r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default SkillSection ;","import React, {Component} from 'react';\r\nimport \"./Bar.css\"\r\nimport { RiMagicLine } from \"react-icons/ri\";\r\nimport { IconContext } from \"react-icons\";\r\nimport scrollToComponent from 'react-scroll-to-component';\r\n\r\n\r\nclass Bar extends Component{\r\n\r\n    \r\n    render(){\r\n        \r\n        const{children} = this.props ;\r\n        const{color} = this.props.color    ;\r\n         return(\r\n            <div className={`bar ${this.props.className || '' }`  }  style={ this.props.style }  >\r\n                \r\n                <div className=\"left-bar\" >\r\n                    <div>\r\n                        {children[0]}\r\n                    </div>\r\n                </div> \r\n\r\n                     {children[1]} \r\n                 \r\n            </div>               \r\n        )\r\n    }\r\n}\r\n\r\nexport default Bar;","import React, {Component} from 'react';\r\nimport \"./MainPage.css\"\r\nimport Bar from \"./Bar\";\r\nimport { RiMagicLine } from \"react-icons/ri\";\r\n\r\nclass MainPage extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            color:'white'\r\n        }\r\n    }\r\n    colorRand=()=>{\r\n        const letters = [\"white\",\"black\",\"red\",\"aqua\"];\r\n        let col=letters[Math.floor(Math.random() * 4 ) ] ;\r\n        this.setState({ color: col })\r\n        console.log(this.state.color)\r\n    }\r\n    backgroundColorRand=()=>{\r\n        const letters = [\"AliceBlue\",\"AntiqueWhite\",\"Olive\",\"OliveDrab\",\"Orange\",\"beige\",\"brown\",\"blue\",\"red\",\"yellow\"];\r\n        let col=letters[Math.floor(Math.random() * 10 ) ] ; \r\n        this.setState({  backgroundColor: col })    \r\n    }\r\n    render(){\r\n        const{children} = this.props\r\n        return(\r\n            <div className={`main-page ${this.props.className || '' }`  } \r\n                style={this.props.style ,{backgroundColor:this.state.backgroundColor,\r\n                color:this.state.color,textShadow:\"1px 1px 1px #000\"}}    >\r\n\r\n                <Bar color={this.state.color}  >\r\n                    <RiMagicLine className=\"pointer\" style={{cursor:\"pointer\",boxShadow:\"1px 1px 1px #010\"}}\r\n                        onClick={() => { this.colorRand() ; this.backgroundColorRand() ;}} color={this.state.color} />\r\n                    {children[0]}\r\n                </Bar>\r\n\r\n                   \r\n                   {children[1]}\r\n                   {children[2]}\r\n                   {children[3]}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default MainPage;","import React, {Component} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport data from \"./data.json\"\nimport { SocialIcon } from 'react-social-icons';\nimport SnowStorm from 'react-snowstorm';\nimport TitleAndIcon from \"./section/TitleAndIcon\";\nimport AboutSection from \"./section/AboutSection\";\nimport SkillSection from \"./section/SkillSection\";\nimport MainPage from \"./component/MainPage\";\nimport scrollToComponent from 'react-scroll-to-component';\nimport { GoChevronDown } from \"react-icons/go\";\nimport { FiArrowUpCircle } from \"react-icons/fi\";\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.scrollToTopWithCallback = this.scrollToTopWithCallback.bind(this)\n      }\n    \n      componentDidMount() {\n        scrollToComponent(this.Blue, { offset: 0, align: 'middle', duration: 500, ease:'inCirc'});\n      }\n    scrollToTopWithCallback() {\n        let scroller = scrollToComponent(this.Tsection, { offset: 0, align: 'top', duration: 1500});\n        scroller.on('end', () => console.log('Scrolling end!') );\n      }\n    render() {\n        return (\n            <div className=\"App\">\n                <SnowStorm flakesMaxActive=\"50\" />\n                <MainPage >     \n                \n                    <div className=\"right-bar\" >\n                        <div className=\"about-btn\" type=\"button\" onClick={() => scrollToComponent(this.Asection, \n                                { offset: 0, align: 'bottom', duration: 500, ease:'inExpo'})}  \n                                style={{color:this.props.color }} >about</div>\n\n                        <div className=\"skill-btn\" type=\"button\" style={{color:this.props.color }} \n                        onClick={() => scrollToComponent(this.Ssection, \n                            { offset: 0, align: 'bottom', duration: 500, ease:'inExpo'})} \n                        >skill</div>   \n                    </div>\n\n                    <TitleAndIcon color=\"\"  backgroundColor=\"\" ref={(section) => { this.Tsection = section; }} >\n                        <GoChevronDown className=\"blink infinite \" onClick={() => scrollToComponent(this.Asection, \n                            { offset: 0, align: 'bottom', duration: 500, ease:'inExpo'})} \n                            style={{fontSize:\"2em\",cursor:\"pointer\",marginTop:\"50px\"}} />\n                     </TitleAndIcon>\n                    \n\n                    <AboutSection ref={(section) => { this.Asection = section; }}  color=\"\"  backgroundColor=\"\">\n                    <GoChevronDown className=\"blink infinite \" onClick={() => scrollToComponent(this.Ssection, \n                            { offset: 0, align: 'bottom', duration: 500, ease:'inExpo'})} \n                            style={{fontSize:\"2em\",cursor:\"pointer\",marginTop:\"50px\"}} />\n                    </AboutSection> \n\n                    <SkillSection  color=\"\" ref={(section) => { this.Ssection = section; }}   backgroundColor=\"\" >\n\n                        <div  >\n                            <FiArrowUpCircle onClick={this.scrollToTopWithCallback} className=\"blink infinite \" \n                            style={{ fontSize:\"2em\",cursor:\"pointer\" }} /> \n                        </div>\n                    </SkillSection>\n                    \n                </MainPage>\n \n             </div>\n        );\n    }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}